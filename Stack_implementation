#include <iostream>
using namespace std;
class stack
{

private:
    int top;
    int arr[5];

public:
    stack()
    {
        top = -1;
        // for (int i = 0; i < 5; i++)
        // {
        //     arr[i] = 0;
        // }
    }
    bool isEmpty()
    {
        if (top == -1)
            return true;
        else
            false;
    }

    bool isFull()
    {
        if (top == 4)
            return true;
        else
            return false;
    }
    void push(int val)
    {
        if (isFull())
        {
            cout << "Stack Overflow" << endl;
        }
        else
        {
            top++; //0
            arr[top] = val;
        }
    }

    int pop()
    {
        if (isEmpty())
        {
            cout << "Stack UnderFlow" << endl;
            return 0;
        }
        else
        {
            int popValue = arr[top];
            arr[top] = 0;
            top--;
            return popValue;
        }
    }

    int count()
    {
        return (top + 1);
    }
    int peak(int pos)
    {
        if (isEmpty())
        {
            cout << "Stack UnderFlow" << endl;
            return 0;
        }
        else
        {
            return arr[pos];
        }
    }

    void change(int pos, int val)
    {
        arr[pos] = val;
        cout << "Value Changed at location :" << pos << endl;
    }

    void display()
    {
        cout << "All values are in the stack are: " << endl;
        for (int i = 4; i >= 0; i--)
        {
            cout << arr[i] << endl;
        }
    }
};

int main()
{
    stack s1;
    int option, position, value;
    do
    {
        cout << "O FOR EXIT" << endl;
        cout << "1.Push" << endl;
        cout << "2.Pop" << endl;
        cout << "3.isEmpty" << endl;
        cout << "4.isFull" << endl;
        cout << "5.peek" << endl;
        cout << "6.count" << endl;
        cout << "7.change" << endl;
        cout << "8.display" << endl;
        cout << "9.Clear Screen" << endl;
        cin >> option;
        switch (option)
        {
        case 1:
            cout << "Enter Item to push :";
            cin >> value;
            s1.push(value);
            break;
        case 2:
            cout << "Pop function called & the poped value is :" << s1.pop() << endl;
            break;
        case 3:
            if (s1.isEmpty())
            {
                cout << "Empty" << endl;
            }
            else
            {
                cout << "Not Empty" << endl;
            }
            break;
        case 4:
            if (s1.isFull())
            {
                cout << "Full" << endl;
            }
            else
            {
                cout << "Not Full" << endl;
            }
            break;
        case 5:
            cout << "Enter position of item you want to peek" << endl;
            cin >> position;
            cout << "Peek function called value at position " << position << " is" << s1.peak(position) << endl;

            break;

        case 6:
            cout << "Count Function is called "
                 << "Number of Items in the Stack are " << s1.count() << endl;
            break;

        case 7:
            cout << "Change Function called" << endl;
            cout << "Enter The Position :";
            cin >> position;
            cout << "Enter the value of item you want to input :";
            cin >> value;
            cout << endl;
            s1.change(position, value);
            break;

        case 8:
            cout << "Display Function Called :" << endl;
            s1.display();
            break;
        case 9:
            system("cls");
        default:
            cout << "Ato sokh kn vai tor? atw gula option raikha vul chapos!! ";
            break;
        }

    } while (option != 0);
}
